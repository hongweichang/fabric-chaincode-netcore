// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: peer/chaincode_shim.proto

#pragma warning disable 1591, 0612, 3021

#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;

namespace Protos
{
    /// <summary>Holder for reflection information generated from peer/chaincode_shim.proto</summary>
    public static partial class ChaincodeShimReflection
    {
        #region Descriptor

        /// <summary>File descriptor for peer/chaincode_shim.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }

        private static pbr::FileDescriptor descriptor;

        static ChaincodeShimReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                    "ChlwZWVyL2NoYWluY29kZV9zaGltLnByb3RvEgZwcm90b3MaGnBlZXIvY2hh",
                    "aW5jb2RlX2V2ZW50LnByb3RvGhNwZWVyL3Byb3Bvc2FsLnByb3RvGh9nb29n",
                    "bGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIsYEChBDaGFpbmNvZGVNZXNz",
                    "YWdlEisKBHR5cGUYASABKA4yHS5wcm90b3MuQ2hhaW5jb2RlTWVzc2FnZS5U",
                    "eXBlEi0KCXRpbWVzdGFtcBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
                    "c3RhbXASDwoHcGF5bG9hZBgDIAEoDBIMCgR0eGlkGAQgASgJEigKCHByb3Bv",
                    "c2FsGAUgASgLMhYucHJvdG9zLlNpZ25lZFByb3Bvc2FsEi8KD2NoYWluY29k",
                    "ZV9ldmVudBgGIAEoCzIWLnByb3Rvcy5DaGFpbmNvZGVFdmVudBISCgpjaGFu",
                    "bmVsX2lkGAcgASgJIscCCgRUeXBlEg0KCVVOREVGSU5FRBAAEgwKCFJFR0lT",
                    "VEVSEAESDgoKUkVHSVNURVJFRBACEggKBElOSVQQAxIJCgVSRUFEWRAEEg8K",
                    "C1RSQU5TQUNUSU9OEAUSDQoJQ09NUExFVEVEEAYSCQoFRVJST1IQBxINCglH",
                    "RVRfU1RBVEUQCBINCglQVVRfU1RBVEUQCRINCglERUxfU1RBVEUQChIUChBJ",
                    "TlZPS0VfQ0hBSU5DT0RFEAsSDAoIUkVTUE9OU0UQDRIWChJHRVRfU1RBVEVf",
                    "QllfUkFOR0UQDhIUChBHRVRfUVVFUllfUkVTVUxUEA8SFAoQUVVFUllfU1RB",
                    "VEVfTkVYVBAQEhUKEVFVRVJZX1NUQVRFX0NMT1NFEBESDQoJS0VFUEFMSVZF",
                    "EBISFwoTR0VUX0hJU1RPUllfRk9SX0tFWRATIisKCEdldFN0YXRlEgsKA2tl",
                    "eRgBIAEoCRISCgpjb2xsZWN0aW9uGAIgASgJIjoKCFB1dFN0YXRlEgsKA2tl",
                    "eRgBIAEoCRINCgV2YWx1ZRgCIAEoDBISCgpjb2xsZWN0aW9uGAMgASgJIisK",
                    "CERlbFN0YXRlEgsKA2tleRgBIAEoCRISCgpjb2xsZWN0aW9uGAIgASgJIkcK",
                    "D0dldFN0YXRlQnlSYW5nZRIQCghzdGFydEtleRgBIAEoCRIOCgZlbmRLZXkY",
                    "AiABKAkSEgoKY29sbGVjdGlvbhgDIAEoCSIzCg5HZXRRdWVyeVJlc3VsdBIN",
                    "CgVxdWVyeRgBIAEoCRISCgpjb2xsZWN0aW9uGAIgASgJIh8KEEdldEhpc3Rv",
                    "cnlGb3JLZXkSCwoDa2V5GAEgASgJIhwKDlF1ZXJ5U3RhdGVOZXh0EgoKAmlk",
                    "GAEgASgJIh0KD1F1ZXJ5U3RhdGVDbG9zZRIKCgJpZBgBIAEoCSInChBRdWVy",
                    "eVJlc3VsdEJ5dGVzEhMKC3Jlc3VsdEJ5dGVzGAEgASgMIlgKDVF1ZXJ5UmVz",
                    "cG9uc2USKQoHcmVzdWx0cxgBIAMoCzIYLnByb3Rvcy5RdWVyeVJlc3VsdEJ5",
                    "dGVzEhAKCGhhc19tb3JlGAIgASgIEgoKAmlkGAMgASgJMlgKEENoYWluY29k",
                    "ZVN1cHBvcnQSRAoIUmVnaXN0ZXISGC5wcm90b3MuQ2hhaW5jb2RlTWVzc2Fn",
                    "ZRoYLnByb3Rvcy5DaGFpbmNvZGVNZXNzYWdlIgAoATABQk8KIm9yZy5oeXBl",
                    "cmxlZGdlci5mYWJyaWMucHJvdG9zLnBlZXJaKWdpdGh1Yi5jb20vaHlwZXJs",
                    "ZWRnZXIvZmFicmljL3Byb3Rvcy9wZWVyYgZwcm90bzM="));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[]
                {
                    global::Protos.ChaincodeEventReflection.Descriptor, global::Protos.ProposalReflection.Descriptor,
                    global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor,
                },
                new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[]
                {
                    new pbr::GeneratedClrTypeInfo(typeof(global::Protos.ChaincodeMessage),
                        global::Protos.ChaincodeMessage.Parser,
                        new[] {"Type", "Timestamp", "Payload", "Txid", "Proposal", "ChaincodeEvent", "ChannelId"}, null,
                        new[] {typeof(global::Protos.ChaincodeMessage.Types.Type)}, null),
                    new pbr::GeneratedClrTypeInfo(typeof(global::Protos.GetState), global::Protos.GetState.Parser,
                        new[] {"Key", "Collection"}, null, null, null),
                    new pbr::GeneratedClrTypeInfo(typeof(global::Protos.PutState), global::Protos.PutState.Parser,
                        new[] {"Key", "Value", "Collection"}, null, null, null),
                    new pbr::GeneratedClrTypeInfo(typeof(global::Protos.DelState), global::Protos.DelState.Parser,
                        new[] {"Key", "Collection"}, null, null, null),
                    new pbr::GeneratedClrTypeInfo(typeof(global::Protos.GetStateByRange),
                        global::Protos.GetStateByRange.Parser, new[] {"StartKey", "EndKey", "Collection"}, null, null,
                        null),
                    new pbr::GeneratedClrTypeInfo(typeof(global::Protos.GetQueryResult),
                        global::Protos.GetQueryResult.Parser, new[] {"Query", "Collection"}, null, null, null),
                    new pbr::GeneratedClrTypeInfo(typeof(global::Protos.GetHistoryForKey),
                        global::Protos.GetHistoryForKey.Parser, new[] {"Key"}, null, null, null),
                    new pbr::GeneratedClrTypeInfo(typeof(global::Protos.QueryStateNext),
                        global::Protos.QueryStateNext.Parser, new[] {"Id"}, null, null, null),
                    new pbr::GeneratedClrTypeInfo(typeof(global::Protos.QueryStateClose),
                        global::Protos.QueryStateClose.Parser, new[] {"Id"}, null, null, null),
                    new pbr::GeneratedClrTypeInfo(typeof(global::Protos.QueryResultBytes),
                        global::Protos.QueryResultBytes.Parser, new[] {"ResultBytes"}, null, null, null),
                    new pbr::GeneratedClrTypeInfo(typeof(global::Protos.QueryResponse),
                        global::Protos.QueryResponse.Parser, new[] {"Results", "HasMore", "Id"}, null, null, null)
                }));
        }

        #endregion
    }

    #region Messages

    public sealed partial class ChaincodeMessage : pb::IMessage<ChaincodeMessage>
    {
        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;

        /// <summary>Field number for the "timestamp" field.</summary>
        public const int TimestampFieldNumber = 2;

        /// <summary>Field number for the "payload" field.</summary>
        public const int PayloadFieldNumber = 3;

        /// <summary>Field number for the "txid" field.</summary>
        public const int TxidFieldNumber = 4;

        /// <summary>Field number for the "proposal" field.</summary>
        public const int ProposalFieldNumber = 5;

        /// <summary>Field number for the "chaincode_event" field.</summary>
        public const int ChaincodeEventFieldNumber = 6;

        /// <summary>Field number for the "channel_id" field.</summary>
        public const int ChannelIdFieldNumber = 7;

        private static readonly pb::MessageParser<ChaincodeMessage> _parser =
            new pb::MessageParser<ChaincodeMessage>(() => new ChaincodeMessage());

        private global::Protos.ChaincodeEvent chaincodeEvent_;
        private string channelId_ = "";
        private pb::ByteString payload_ = pb::ByteString.Empty;
        private global::Protos.SignedProposal proposal_;
        private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
        private string txid_ = "";
        private global::Protos.ChaincodeMessage.Types.Type type_ = 0;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChaincodeMessage()
        {
            OnConstruction();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChaincodeMessage(ChaincodeMessage other)
            : this()
        {
            type_ = other.type_;
            Timestamp = other.timestamp_ != null ? other.Timestamp.Clone() : null;
            payload_ = other.payload_;
            txid_ = other.txid_;
            Proposal = other.proposal_ != null ? other.Proposal.Clone() : null;
            ChaincodeEvent = other.chaincodeEvent_ != null ? other.ChaincodeEvent.Clone() : null;
            channelId_ = other.channelId_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ChaincodeMessage> Parser
        {
            get { return _parser; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protos.ChaincodeShimReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Protos.ChaincodeMessage.Types.Type Type
        {
            get { return type_; }
            set { type_ = value; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp
        {
            get { return timestamp_; }
            set { timestamp_ = value; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Payload
        {
            get { return payload_; }
            set { payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Txid
        {
            get { return txid_; }
            set { txid_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Protos.SignedProposal Proposal
        {
            get { return proposal_; }
            set { proposal_ = value; }
        }

      /// <summary>
      ///     event emitted by chaincode. Used only with Init or Invoke.
      ///     This event is then stored (currently)
      ///     with Block.NonHashData.TransactionResult
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Protos.ChaincodeEvent ChaincodeEvent
        {
            get { return chaincodeEvent_; }
            set { chaincodeEvent_ = value; }
        }

      /// <summary>
      ///     channel id
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ChannelId
        {
            get { return channelId_; }
            set { channelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChaincodeMessage Clone()
        {
            return new ChaincodeMessage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ChaincodeMessage other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }

            if (ReferenceEquals(other, this))
            {
                return true;
            }

            if (Type != other.Type) return false;
            if (!Equals(Timestamp, other.Timestamp)) return false;
            if (Payload != other.Payload) return false;
            if (Txid != other.Txid) return false;
            if (!Equals(Proposal, other.Proposal)) return false;
            if (!Equals(ChaincodeEvent, other.ChaincodeEvent)) return false;
            if (ChannelId != other.ChannelId) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Type != 0)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int) Type);
            }

            if (timestamp_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Timestamp);
            }

            if (Payload.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteBytes(Payload);
            }

            if (Txid.Length != 0)
            {
                output.WriteRawTag(34);
                output.WriteString(Txid);
            }

            if (proposal_ != null)
            {
                output.WriteRawTag(42);
                output.WriteMessage(Proposal);
            }

            if (chaincodeEvent_ != null)
            {
                output.WriteRawTag(50);
                output.WriteMessage(ChaincodeEvent);
            }

            if (ChannelId.Length != 0)
            {
                output.WriteRawTag(58);
                output.WriteString(ChannelId);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Type != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
            }

            if (timestamp_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
            }

            if (Payload.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
            }

            if (Txid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Txid);
            }

            if (proposal_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proposal);
            }

            if (chaincodeEvent_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChaincodeEvent);
            }

            if (ChannelId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelId);
            }

            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ChaincodeMessage other)
        {
            if (other == null)
            {
                return;
            }

            if (other.Type != 0)
            {
                Type = other.Type;
            }

            if (other.timestamp_ != null)
            {
                if (timestamp_ == null)
                {
                    timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }

                Timestamp.MergeFrom(other.Timestamp);
            }

            if (other.Payload.Length != 0)
            {
                Payload = other.Payload;
            }

            if (other.Txid.Length != 0)
            {
                Txid = other.Txid;
            }

            if (other.proposal_ != null)
            {
                if (proposal_ == null)
                {
                    proposal_ = new global::Protos.SignedProposal();
                }

                Proposal.MergeFrom(other.Proposal);
            }

            if (other.chaincodeEvent_ != null)
            {
                if (chaincodeEvent_ == null)
                {
                    chaincodeEvent_ = new global::Protos.ChaincodeEvent();
                }

                ChaincodeEvent.MergeFrom(other.ChaincodeEvent);
            }

            if (other.ChannelId.Length != 0)
            {
                ChannelId = other.ChannelId;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 8:
                    {
                        type_ = (global::Protos.ChaincodeMessage.Types.Type) input.ReadEnum();
                        break;
                    }
                    case 18:
                    {
                        if (timestamp_ == null)
                        {
                            timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                        }

                        input.ReadMessage(timestamp_);
                        break;
                    }
                    case 26:
                    {
                        Payload = input.ReadBytes();
                        break;
                    }
                    case 34:
                    {
                        Txid = input.ReadString();
                        break;
                    }
                    case 42:
                    {
                        if (proposal_ == null)
                        {
                            proposal_ = new global::Protos.SignedProposal();
                        }

                        input.ReadMessage(proposal_);
                        break;
                    }
                    case 50:
                    {
                        if (chaincodeEvent_ == null)
                        {
                            chaincodeEvent_ = new global::Protos.ChaincodeEvent();
                        }

                        input.ReadMessage(chaincodeEvent_);
                        break;
                    }
                    case 58:
                    {
                        ChannelId = input.ReadString();
                        break;
                    }
                }
            }
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ChaincodeMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Type != 0) hash ^= Type.GetHashCode();
            if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
            if (Payload.Length != 0) hash ^= Payload.GetHashCode();
            if (Txid.Length != 0) hash ^= Txid.GetHashCode();
            if (proposal_ != null) hash ^= Proposal.GetHashCode();
            if (chaincodeEvent_ != null) hash ^= ChaincodeEvent.GetHashCode();
            if (ChannelId.Length != 0) hash ^= ChannelId.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        #region Nested types

        /// <summary>Container for nested types declared in the ChaincodeMessage message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum Type
            {
                [pbr::OriginalName("UNDEFINED")] Undefined = 0,
                [pbr::OriginalName("REGISTER")] Register = 1,
                [pbr::OriginalName("REGISTERED")] Registered = 2,
                [pbr::OriginalName("INIT")] Init = 3,
                [pbr::OriginalName("READY")] Ready = 4,
                [pbr::OriginalName("TRANSACTION")] Transaction = 5,
                [pbr::OriginalName("COMPLETED")] Completed = 6,
                [pbr::OriginalName("ERROR")] Error = 7,
                [pbr::OriginalName("GET_STATE")] GetState = 8,
                [pbr::OriginalName("PUT_STATE")] PutState = 9,
                [pbr::OriginalName("DEL_STATE")] DelState = 10,

                [pbr::OriginalName("INVOKE_CHAINCODE")]
                InvokeChaincode = 11,
                [pbr::OriginalName("RESPONSE")] Response = 13,

                [pbr::OriginalName("GET_STATE_BY_RANGE")]
                GetStateByRange = 14,

                [pbr::OriginalName("GET_QUERY_RESULT")]
                GetQueryResult = 15,

                [pbr::OriginalName("QUERY_STATE_NEXT")]
                QueryStateNext = 16,

                [pbr::OriginalName("QUERY_STATE_CLOSE")]
                QueryStateClose = 17,
                [pbr::OriginalName("KEEPALIVE")] Keepalive = 18,

                [pbr::OriginalName("GET_HISTORY_FOR_KEY")]
                GetHistoryForKey = 19,
            }
        }

        #endregion
    }

    public sealed partial class GetState : pb::IMessage<GetState>
    {
        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;

        /// <summary>Field number for the "collection" field.</summary>
        public const int CollectionFieldNumber = 2;

        private static readonly pb::MessageParser<GetState> _parser =
            new pb::MessageParser<GetState>(() => new GetState());

        private string collection_ = "";
        private string key_ = "";

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetState()
        {
            OnConstruction();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetState(GetState other)
            : this()
        {
            key_ = other.key_;
            collection_ = other.collection_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GetState> Parser
        {
            get { return _parser; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protos.ChaincodeShimReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Key
        {
            get { return key_; }
            set { key_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Collection
        {
            get { return collection_; }
            set { collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetState Clone()
        {
            return new GetState(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GetState other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }

            if (ReferenceEquals(other, this))
            {
                return true;
            }

            if (Key != other.Key) return false;
            if (Collection != other.Collection) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Key.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Key);
            }

            if (Collection.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Collection);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Key.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
            }

            if (Collection.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
            }

            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GetState other)
        {
            if (other == null)
            {
                return;
            }

            if (other.Key.Length != 0)
            {
                Key = other.Key;
            }

            if (other.Collection.Length != 0)
            {
                Collection = other.Collection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                    {
                        Key = input.ReadString();
                        break;
                    }
                    case 18:
                    {
                        Collection = input.ReadString();
                        break;
                    }
                }
            }
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as GetState);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Key.Length != 0) hash ^= Key.GetHashCode();
            if (Collection.Length != 0) hash ^= Collection.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }
    }

    public sealed partial class PutState : pb::IMessage<PutState>
    {
        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;

        /// <summary>Field number for the "collection" field.</summary>
        public const int CollectionFieldNumber = 3;

        private static readonly pb::MessageParser<PutState> _parser =
            new pb::MessageParser<PutState>(() => new PutState());

        private string collection_ = "";
        private string key_ = "";
        private pb::ByteString value_ = pb::ByteString.Empty;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PutState()
        {
            OnConstruction();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PutState(PutState other)
            : this()
        {
            key_ = other.key_;
            value_ = other.value_;
            collection_ = other.collection_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PutState> Parser
        {
            get { return _parser; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protos.ChaincodeShimReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Key
        {
            get { return key_; }
            set { key_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Value
        {
            get { return value_; }
            set { value_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Collection
        {
            get { return collection_; }
            set { collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PutState Clone()
        {
            return new PutState(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PutState other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }

            if (ReferenceEquals(other, this))
            {
                return true;
            }

            if (Key != other.Key) return false;
            if (Value != other.Value) return false;
            if (Collection != other.Collection) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Key.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Key);
            }

            if (Value.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteBytes(Value);
            }

            if (Collection.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Collection);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Key.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
            }

            if (Value.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
            }

            if (Collection.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
            }

            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PutState other)
        {
            if (other == null)
            {
                return;
            }

            if (other.Key.Length != 0)
            {
                Key = other.Key;
            }

            if (other.Value.Length != 0)
            {
                Value = other.Value;
            }

            if (other.Collection.Length != 0)
            {
                Collection = other.Collection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                    {
                        Key = input.ReadString();
                        break;
                    }
                    case 18:
                    {
                        Value = input.ReadBytes();
                        break;
                    }
                    case 26:
                    {
                        Collection = input.ReadString();
                        break;
                    }
                }
            }
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as PutState);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Key.Length != 0) hash ^= Key.GetHashCode();
            if (Value.Length != 0) hash ^= Value.GetHashCode();
            if (Collection.Length != 0) hash ^= Collection.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }
    }

    public sealed partial class DelState : pb::IMessage<DelState>
    {
        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;

        /// <summary>Field number for the "collection" field.</summary>
        public const int CollectionFieldNumber = 2;

        private static readonly pb::MessageParser<DelState> _parser =
            new pb::MessageParser<DelState>(() => new DelState());

        private string collection_ = "";
        private string key_ = "";

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DelState()
        {
            OnConstruction();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DelState(DelState other)
            : this()
        {
            key_ = other.key_;
            collection_ = other.collection_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DelState> Parser
        {
            get { return _parser; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protos.ChaincodeShimReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Key
        {
            get { return key_; }
            set { key_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Collection
        {
            get { return collection_; }
            set { collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DelState Clone()
        {
            return new DelState(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DelState other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }

            if (ReferenceEquals(other, this))
            {
                return true;
            }

            if (Key != other.Key) return false;
            if (Collection != other.Collection) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Key.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Key);
            }

            if (Collection.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Collection);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Key.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
            }

            if (Collection.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
            }

            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DelState other)
        {
            if (other == null)
            {
                return;
            }

            if (other.Key.Length != 0)
            {
                Key = other.Key;
            }

            if (other.Collection.Length != 0)
            {
                Collection = other.Collection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                    {
                        Key = input.ReadString();
                        break;
                    }
                    case 18:
                    {
                        Collection = input.ReadString();
                        break;
                    }
                }
            }
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as DelState);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Key.Length != 0) hash ^= Key.GetHashCode();
            if (Collection.Length != 0) hash ^= Collection.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }
    }

    public sealed partial class GetStateByRange : pb::IMessage<GetStateByRange>
    {
        /// <summary>Field number for the "startKey" field.</summary>
        public const int StartKeyFieldNumber = 1;

        /// <summary>Field number for the "endKey" field.</summary>
        public const int EndKeyFieldNumber = 2;

        /// <summary>Field number for the "collection" field.</summary>
        public const int CollectionFieldNumber = 3;

        private static readonly pb::MessageParser<GetStateByRange> _parser =
            new pb::MessageParser<GetStateByRange>(() => new GetStateByRange());

        private string collection_ = "";
        private string endKey_ = "";
        private string startKey_ = "";

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetStateByRange()
        {
            OnConstruction();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetStateByRange(GetStateByRange other)
            : this()
        {
            startKey_ = other.startKey_;
            endKey_ = other.endKey_;
            collection_ = other.collection_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GetStateByRange> Parser
        {
            get { return _parser; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protos.ChaincodeShimReflection.Descriptor.MessageTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StartKey
        {
            get { return startKey_; }
            set { startKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EndKey
        {
            get { return endKey_; }
            set { endKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Collection
        {
            get { return collection_; }
            set { collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetStateByRange Clone()
        {
            return new GetStateByRange(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GetStateByRange other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }

            if (ReferenceEquals(other, this))
            {
                return true;
            }

            if (StartKey != other.StartKey) return false;
            if (EndKey != other.EndKey) return false;
            if (Collection != other.Collection) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (StartKey.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(StartKey);
            }

            if (EndKey.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(EndKey);
            }

            if (Collection.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Collection);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (StartKey.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(StartKey);
            }

            if (EndKey.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(EndKey);
            }

            if (Collection.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
            }

            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GetStateByRange other)
        {
            if (other == null)
            {
                return;
            }

            if (other.StartKey.Length != 0)
            {
                StartKey = other.StartKey;
            }

            if (other.EndKey.Length != 0)
            {
                EndKey = other.EndKey;
            }

            if (other.Collection.Length != 0)
            {
                Collection = other.Collection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                    {
                        StartKey = input.ReadString();
                        break;
                    }
                    case 18:
                    {
                        EndKey = input.ReadString();
                        break;
                    }
                    case 26:
                    {
                        Collection = input.ReadString();
                        break;
                    }
                }
            }
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as GetStateByRange);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (StartKey.Length != 0) hash ^= StartKey.GetHashCode();
            if (EndKey.Length != 0) hash ^= EndKey.GetHashCode();
            if (Collection.Length != 0) hash ^= Collection.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }
    }

    public sealed partial class GetQueryResult : pb::IMessage<GetQueryResult>
    {
        /// <summary>Field number for the "query" field.</summary>
        public const int QueryFieldNumber = 1;

        /// <summary>Field number for the "collection" field.</summary>
        public const int CollectionFieldNumber = 2;

        private static readonly pb::MessageParser<GetQueryResult> _parser =
            new pb::MessageParser<GetQueryResult>(() => new GetQueryResult());

        private string collection_ = "";
        private string query_ = "";

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetQueryResult()
        {
            OnConstruction();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetQueryResult(GetQueryResult other)
            : this()
        {
            query_ = other.query_;
            collection_ = other.collection_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GetQueryResult> Parser
        {
            get { return _parser; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protos.ChaincodeShimReflection.Descriptor.MessageTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Query
        {
            get { return query_; }
            set { query_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Collection
        {
            get { return collection_; }
            set { collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetQueryResult Clone()
        {
            return new GetQueryResult(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GetQueryResult other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }

            if (ReferenceEquals(other, this))
            {
                return true;
            }

            if (Query != other.Query) return false;
            if (Collection != other.Collection) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Query.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Query);
            }

            if (Collection.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Collection);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Query.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
            }

            if (Collection.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
            }

            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GetQueryResult other)
        {
            if (other == null)
            {
                return;
            }

            if (other.Query.Length != 0)
            {
                Query = other.Query;
            }

            if (other.Collection.Length != 0)
            {
                Collection = other.Collection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                    {
                        Query = input.ReadString();
                        break;
                    }
                    case 18:
                    {
                        Collection = input.ReadString();
                        break;
                    }
                }
            }
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as GetQueryResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Query.Length != 0) hash ^= Query.GetHashCode();
            if (Collection.Length != 0) hash ^= Collection.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }
    }

    public sealed partial class GetHistoryForKey : pb::IMessage<GetHistoryForKey>
    {
        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;

        private static readonly pb::MessageParser<GetHistoryForKey> _parser =
            new pb::MessageParser<GetHistoryForKey>(() => new GetHistoryForKey());

        private string key_ = "";

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetHistoryForKey()
        {
            OnConstruction();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetHistoryForKey(GetHistoryForKey other)
            : this()
        {
            key_ = other.key_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GetHistoryForKey> Parser
        {
            get { return _parser; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protos.ChaincodeShimReflection.Descriptor.MessageTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Key
        {
            get { return key_; }
            set { key_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetHistoryForKey Clone()
        {
            return new GetHistoryForKey(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GetHistoryForKey other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }

            if (ReferenceEquals(other, this))
            {
                return true;
            }

            if (Key != other.Key) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Key.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Key);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Key.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
            }

            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GetHistoryForKey other)
        {
            if (other == null)
            {
                return;
            }

            if (other.Key.Length != 0)
            {
                Key = other.Key;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                    {
                        Key = input.ReadString();
                        break;
                    }
                }
            }
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as GetHistoryForKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Key.Length != 0) hash ^= Key.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }
    }

    public sealed partial class QueryStateNext : pb::IMessage<QueryStateNext>
    {
        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;

        private static readonly pb::MessageParser<QueryStateNext> _parser =
            new pb::MessageParser<QueryStateNext>(() => new QueryStateNext());

        private string id_ = "";

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryStateNext()
        {
            OnConstruction();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryStateNext(QueryStateNext other)
            : this()
        {
            id_ = other.id_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<QueryStateNext> Parser
        {
            get { return _parser; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protos.ChaincodeShimReflection.Descriptor.MessageTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id
        {
            get { return id_; }
            set { id_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryStateNext Clone()
        {
            return new QueryStateNext(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(QueryStateNext other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }

            if (ReferenceEquals(other, this))
            {
                return true;
            }

            if (Id != other.Id) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Id.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Id);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Id.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
            }

            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(QueryStateNext other)
        {
            if (other == null)
            {
                return;
            }

            if (other.Id.Length != 0)
            {
                Id = other.Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                    {
                        Id = input.ReadString();
                        break;
                    }
                }
            }
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as QueryStateNext);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Id.Length != 0) hash ^= Id.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }
    }

    public sealed partial class QueryStateClose : pb::IMessage<QueryStateClose>
    {
        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;

        private static readonly pb::MessageParser<QueryStateClose> _parser =
            new pb::MessageParser<QueryStateClose>(() => new QueryStateClose());

        private string id_ = "";

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryStateClose()
        {
            OnConstruction();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryStateClose(QueryStateClose other)
            : this()
        {
            id_ = other.id_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<QueryStateClose> Parser
        {
            get { return _parser; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protos.ChaincodeShimReflection.Descriptor.MessageTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id
        {
            get { return id_; }
            set { id_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryStateClose Clone()
        {
            return new QueryStateClose(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(QueryStateClose other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }

            if (ReferenceEquals(other, this))
            {
                return true;
            }

            if (Id != other.Id) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Id.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Id);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Id.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
            }

            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(QueryStateClose other)
        {
            if (other == null)
            {
                return;
            }

            if (other.Id.Length != 0)
            {
                Id = other.Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                    {
                        Id = input.ReadString();
                        break;
                    }
                }
            }
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as QueryStateClose);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Id.Length != 0) hash ^= Id.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }
    }

    public sealed partial class QueryResultBytes : pb::IMessage<QueryResultBytes>
    {
        /// <summary>Field number for the "resultBytes" field.</summary>
        public const int ResultBytesFieldNumber = 1;

        private static readonly pb::MessageParser<QueryResultBytes> _parser =
            new pb::MessageParser<QueryResultBytes>(() => new QueryResultBytes());

        private pb::ByteString resultBytes_ = pb::ByteString.Empty;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryResultBytes()
        {
            OnConstruction();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryResultBytes(QueryResultBytes other)
            : this()
        {
            resultBytes_ = other.resultBytes_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<QueryResultBytes> Parser
        {
            get { return _parser; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protos.ChaincodeShimReflection.Descriptor.MessageTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString ResultBytes
        {
            get { return resultBytes_; }
            set { resultBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryResultBytes Clone()
        {
            return new QueryResultBytes(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(QueryResultBytes other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }

            if (ReferenceEquals(other, this))
            {
                return true;
            }

            if (ResultBytes != other.ResultBytes) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (ResultBytes.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteBytes(ResultBytes);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (ResultBytes.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(ResultBytes);
            }

            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(QueryResultBytes other)
        {
            if (other == null)
            {
                return;
            }

            if (other.ResultBytes.Length != 0)
            {
                ResultBytes = other.ResultBytes;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                    {
                        ResultBytes = input.ReadBytes();
                        break;
                    }
                }
            }
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as QueryResultBytes);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (ResultBytes.Length != 0) hash ^= ResultBytes.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }
    }

    public sealed partial class QueryResponse : pb::IMessage<QueryResponse>
    {
        /// <summary>Field number for the "results" field.</summary>
        public const int ResultsFieldNumber = 1;

        /// <summary>Field number for the "has_more" field.</summary>
        public const int HasMoreFieldNumber = 2;

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 3;

        private static readonly pb::MessageParser<QueryResponse> _parser =
            new pb::MessageParser<QueryResponse>(() => new QueryResponse());

        private static readonly pb::FieldCodec<global::Protos.QueryResultBytes> _repeated_results_codec
            = pb::FieldCodec.ForMessage(10, global::Protos.QueryResultBytes.Parser);

        private readonly pbc::RepeatedField<global::Protos.QueryResultBytes> results_ =
            new pbc::RepeatedField<global::Protos.QueryResultBytes>();

        private bool hasMore_;
        private string id_ = "";

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryResponse()
        {
            OnConstruction();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryResponse(QueryResponse other)
            : this()
        {
            results_ = other.results_.Clone();
            hasMore_ = other.hasMore_;
            id_ = other.id_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<QueryResponse> Parser
        {
            get { return _parser; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protos.ChaincodeShimReflection.Descriptor.MessageTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Protos.QueryResultBytes> Results
        {
            get { return results_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasMore
        {
            get { return hasMore_; }
            set { hasMore_ = value; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id
        {
            get { return id_; }
            set { id_ = pb::ProtoPreconditions.CheckNotNull(value, "value"); }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryResponse Clone()
        {
            return new QueryResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(QueryResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }

            if (ReferenceEquals(other, this))
            {
                return true;
            }

            if (!results_.Equals(other.results_)) return false;
            if (HasMore != other.HasMore) return false;
            if (Id != other.Id) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            results_.WriteTo(output, _repeated_results_codec);
            if (HasMore != false)
            {
                output.WriteRawTag(16);
                output.WriteBool(HasMore);
            }

            if (Id.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Id);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            size += results_.CalculateSize(_repeated_results_codec);
            if (HasMore != false)
            {
                size += 1 + 1;
            }

            if (Id.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
            }

            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(QueryResponse other)
        {
            if (other == null)
            {
                return;
            }

            results_.Add(other.results_);
            if (other.HasMore != false)
            {
                HasMore = other.HasMore;
            }

            if (other.Id.Length != 0)
            {
                Id = other.Id;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                    {
                        results_.AddEntriesFrom(input, _repeated_results_codec);
                        break;
                    }
                    case 16:
                    {
                        HasMore = input.ReadBool();
                        break;
                    }
                    case 26:
                    {
                        Id = input.ReadString();
                        break;
                    }
                }
            }
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as QueryResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= results_.GetHashCode();
            if (HasMore != false) hash ^= HasMore.GetHashCode();
            if (Id.Length != 0) hash ^= Id.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }
    }

    #endregion
}

#endregion Designer generated code
